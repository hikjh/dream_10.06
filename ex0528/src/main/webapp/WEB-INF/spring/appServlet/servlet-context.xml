<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/"/>
	<resources location="/css/" mapping="/css/**"/>
  	<resources location="/fonts/" mapping="/fonts/**"/>
  	<resources location="/js/" mapping="/js/**"/>
  	<resources location="/upload/" mapping="/upload/**"/>
  	<resources location="/favicon.ico/" mapping="/favicon.ico/**"/>
  	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 
		파일 업로드/다운로드를 위한 MultipartResolver 정의
		multipartResolver -> filterMultipartResolver로 변경 : XSS filter 적용	
	 -->
	<beans:bean id="filterMultipartResolver"
            class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    </beans:bean>
    
	<!-- 로그인을 위한 Interceptor 정의 -->
	<beans:bean id="LoginCheck" class="com.mycompany.myapp.interceptor.LoginCheck"></beans:bean>
	<interceptors>
		<interceptor>
			<mapping path="/article/**/"/>
			<mapping path="/myPage/**/"/>
			<mapping path="/test/"/>
			<beans:ref bean="LoginCheck"/>
		</interceptor>
	</interceptors>
	<context:component-scan base-package="com.mycompany.myapp.*" />
	
	<tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager"/>
</beans:beans>
